#include "inc/mons.h"
#include "inc/def.h"
#include "inc/flag.h"
#include "inc/se.h"
#include "inc/scr_inc.h"
#include "inc/3dicon.h"
#include "inc/skilldef.h"
#include "inc/vo.h"
#include "inc/fish.h"

//----------------------------------------------------------------------------//
//                                                                            //
// パンガイア　ミニマップ用                                                       //
//                                                                            //
//----------------------------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////
// 初期化スクリプト
///////////////////////////////////////////////////////////////////////////////
//-------------------------------------------
// init
function "init"
{
	if( FLAG[SF_EVENT_ON] )
	{
		//ヒモロギの成長度
		CallFunc("system:himorogi_grow")

		// マップノード・アニメ
		MapAnime("mistSphere", "off")	// 霧のマユ
		if( FLAG[GF_TBOX_DUMMY087]				// ▼[M06S020][調査のためジャンダルムへ向かう]
			&& !FLAG[GF_06MP4109_CLEAR_MIST] )		// ▽[M06S111][山門の霧を突破する２]
		{
			MapAnime("mistSphere", "on")	// 霧のマユ
		}
		// マップノード・アニメ
		if (FLAG[GF_SUBEV_PAST_03_GIMMICK_A] == 2 )		// 過去編Ⅲギミックを達成していた場合は果樹を表示
		{
			MapAnime("gim_lp02", "on")
		}

		//夜ダンジョンクエスト用
		if(FLAG[GF_NIGHTHUNT])		//夜間探索時
		{
			if(!FLAG[GF_QS613_EVENT_2])
			{
				SetChrPos("QS_613_Check_1"-112.74f,1057.31f,41.29f)
				SetChrPos("QS_613_Check_2",31.27f,1090.94f,44.01f)
			}
		}

		////釣り場制御
		//if( !FLAG[GF_NIGHTHUNT])			// 夜ダンジョンでない時
		//{
		//	//夜ダンジョン以外では夜用ヌシ釣り場をOFFに
		//	SetFishingAreaState( FISH_AREA_BIG00_10, FISH_AREASTATE_DISABLED )	// 漁場 off
		//	SetFishingAreaState( FISH_AREA_BIG02_02, FISH_AREASTATE_DISABLED )	// 漁場 off
		//	SetFishingAreaState( FISH_AREA_BIG03_02, FISH_AREASTATE_DISABLED )	// 漁場 off
		//}
		//else
		//{
		//	SetFishingAreaState( FISH_AREA_BIG00_10, FISH_AREASTATE_DISABLED )	// 昼用の漁場をOFF
		//}
	}
}

function "QS_613_Check_1"
{
//開始処理ここから----------------------------------------------------
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)
	ResetStopFlag(STOPFLAG_NOCHARACLIP)
	SaveCamera()
	
	ResetMotion( "PARTYALL" , 0 )
	StopEffect(-1,PARTYALL,1)
	StopEmotion( "PARTYALL" )
	ResetMoveVec("PARTYALL")
//開始処理ここまで-----------------------------------------------

	TurnToChr( LEADER , this , 7.5f )
	Wait(10)

	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7Cこの巣には翼竜の卵はないようだ……"
	}
	WaitPrompt()
	WaitCloseWindow()

	DelMapMarker( SMI_NIGHT_QUEST, PAGE_F034t2, MARKER_QS_613_3, 0, 0)			// 【QS613】卵の奪還（巣の位置）※ハズレ
	
	Wait(5)

//終了処理ここから----------------------------------------------------
	CrossFade(FADE_CROSS)
	
	//イベント後の再配置
	//SetChrPos("LEADER",0.00f,0.00f,0.00f)
	//Turn("LEADER",0.00f,360.0f)
	//ResetPartyPos()
	//ResetFollowPoint()
	
	RestoreCamera(0,0)
	ResetCameraObserver(0)
	ResetCameraZPlane()
	Wait(FADE_CROSS)
	
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
//終了処理ここまで----------------------------------------------------
}

function "QS_613_Check_2"
{
//開始処理ここから----------------------------------------------------
	SetStopFlag(STOPFLAG_SIMPLEEVENT2)
	ResetStopFlag(STOPFLAG_NOCHARACLIP)
	SaveCamera()
	
	ResetMotion( "PARTYALL" , 0 )
	StopEffect(-1,PARTYALL,1)
	StopEmotion( "PARTYALL" )
	ResetMoveVec("PARTYALL")
//開始処理ここまで-----------------------------------------------

	TurnToChr( LEADER , this , 7.5f )
	Wait(10)

	TalkPopup(UNDEF,0,3,SYSTEM_PPOSX,SYSTEM_PPOSY,0)
	{
		"#7Cこの巣には翼竜の卵はないようだ……"
	}
	WaitPrompt()
	WaitCloseWindow()

	DelMapMarker( SMI_NIGHT_QUEST, PAGE_F034t2, MARKER_QS_613_4, 0, 0)			// 【QS613】卵の奪還（巣の位置）※ハズレ

	Wait(5)

//終了処理ここから----------------------------------------------------
	CrossFade(FADE_CROSS)
	
	//イベント後の再配置
	//SetChrPos("LEADER",0.00f,0.00f,0.00f)
	//Turn("LEADER",0.00f,360.0f)
	//ResetPartyPos()
	//ResetFollowPoint()
	
	RestoreCamera(0,0)
	ResetCameraObserver(0)
	ResetCameraZPlane()
	Wait(FADE_CROSS)
	
	ResetStopFlag(STOPFLAG_SIMPLEEVENT2)
//終了処理ここまで----------------------------------------------------
}


